<?phpnamespace App\Http\Controllers;use App\Enums\Roles;use App\Models\User;use Exception;use Illuminate\Http\Request;use Illuminate\Support\Facades\Auth;use Illuminate\Support\Facades\Hash;use Illuminate\Support\Facades\Validator;class UserController extends Controller{    public function auth (Request $request)    {        $rules = [            'login' => 'required',            'password' => 'required'        ];        $messages = [            'login.required' => 'Логин обязательное поле',            'password.required' => 'Пароль обязательное поле',        ];        Validator::make($request->all(), $rules, $messages)->validate();        $user = User::where('login', $request->login)->first();        try {            if ( $user->password === $request->password ) {                Auth::login($user, 1);                return redirect()->route('profile');            }        } catch ( Exception $e ) {        }        finally {            session()->flash('error', 'Неправильный логин/пароль');            return redirect()->back();        }    }    public function username ()    {        return 'login';    }    public function create (Request $request)    {        $rules = [            'login' => 'required|unique:users',            'password' => 'required|confirmed',            'name' => 'required',            'city' => 'required',            'phone_student' => 'required',            'phone_parent' => 'required',            'birthday' => 'required',            'age' => 'required',            'link_vk' => 'required',            'name_parent' => 'required',        ];        $messages = [            'name.required' => 'Укажите своё имя',            'login.unique' => 'Такой пользователь уже есть',            'password.required' => 'Укажите свой пароль',            'password.confirmed' => 'Пароли не совпадают',            'login.required' => 'Укажите свой логин',            'city.required' => 'Укажите город своего проживания',            'phone_student.required' => 'Укажите свой телефон',            'phone_parent.required' => 'Укажите телефон своего родителя',            'birthday.required' => 'Укажите дату своего рождения',            'link_vk.required' => 'Укажите свой VK',            'name_parent.required' => 'Укажите имя своего родителя',            'age.required' => 'Укажите свой возраст'        ];        $validator = Validator::make($request->all(), $rules, $messages)->validate();        $user = User::create([            'name' => $request->name,            'login' => $request->login,            'city' => $request->city,            'age' => $request->age,            'phone_student' => $request->phone_student,            'phone_parent' => $request->phone_parent,            'birthday' => $request->birthday,            'link_vk' => $request->link_vk,            'name_parent' => $request->name_parent,            'password' => $request->password,            'parent_vk' => $request->parent_vk,            'role_id' => Roles::STUDENT        ]);        session()->flash('success', 'Вы успешно зарегистрированы');        Auth::login($user, true);        return redirect("/profile");    }    public function logout (Request $request)    {        Auth::logout();        return redirect()->route('auth.login');    }    private function updatePasswords ()    {        $users = User::all();        foreach ( $users as $user ) {            $user->password = Hash::make($user->password);            $user->save();        }    }}